language: python
before_install:
- uname -a
- df -h
- ulimit -a
- source devtools/travis-ci/before_install.sh
- python -V
install:
- python devtools/scripts/create_conda_env.py -n=test -p=$PYTHON_VER devtools/conda-envs/test_env.yaml
- conda activate test
- pip install -e .
- conda list
- pip freeze
matrix:
  fast_finish: true
notifications:
  email: false
stages:
- lint
- test
- deploy
jobs:
  include:
  - stage: lint
    name: Check formatting of code for PEP-8
    os: linux
    language: generic
    env: PYTHON_VER=3.7
    script:
    - flake8 reference_handler
    - yapf --diff --recursive  reference_handler
  - stage: test
    name: Tests on MacOS Python 3.6
    script:
    - pytest -v reference_handler/tests/
    os: osx
    language: generic
    env: PYTHON_VER=3.6
  - stage: test
    name: Tests on MacOS Python 3.7
    script:
    - pytest -v reference_handler/tests/
    os: osx
    language: generic
    env: PYTHON_VER=3.7
  - stage: test
    name: Tests on Linux Python 3.6
    script:
    - pytest -v reference_handler/tests/
    os: linux
    language: generic
    env: PYTHON_VER=3.6
  - stage: test
    name: Tests and coverage on Linux Python 3.7
    script:
    - pytest -v --cov=reference_handler reference_handler/tests/
    after_success:
    - codecov
    os: linux
    language: generic
    env: PYTHON_VER=3.7
  - stage: deploy
    name: Deploy to PyPi
    if: tag IS present
    dist: xenial
    python: 3.7
    script: skip
    deploy:
      provider: pypi
      distributions: sdist bdist_wheel
      skip_existing: true
      on:
        condition: "$TRAVIS_OS_NAME = linux"
        repo: molssi/reference_handler
        tags: true
      user: seamm
      password:
        secure: hPfb004nfrYf2IbsJAgJ6B9thWogObPnUO8PsGeu5csqxWUZLA7O4xN5LFUL2Nw5ttvuMiBk3+EVr0f0IvvrSDj6YKtD+magUJF5shur7tuRegrGWUwWCrNOR1i29f/UuNcYGUg+5W8QTJuJ7UisTeSSC2OOcRw4dNI9iAHNx8nkl/Qt3fz3q+90KfDg/zmO7Dkwozd4pG6sywPzZVxxiN4EC/LMXMOb+BtIbhRGcj/VT/cNVNkgoDwaZ3lhBUrZr3XpFKNTddAGNaO2SebOI2yd+S3HG3ZwBpJwgcmGEHF89EoyA6/WqOaAZ6qbAwG7I2E5uC8YZzdDgSkEkirKT/QhepqGfrIHAEMWIiR0q9WlYqRhNUY7pzYE8nly8EsApVDLrUp9WLL72DOrdrLuRdUKTkysQxqvtHyrmYEkY9wvR20/HDRFEC96yKfkrJcyrKNc21HH1LCGD2kBcX/Z1lj3NKeKzi4YTzjCAv2L6Wqtveum5niS0j4YN+3iMBj9/wM71b+RkquznLwIcIgxjfHvx1Dx6QRVlFyR+IkBK3PvRSz4GRbhZnd4dV53IyxrnZLFkl9I5IPiatgdjGmjb/2czwvn21iV/bPNIP5oLz3T/MGS/I7HprcRG/4/RV2bpo0/LrnbPwAPp0GEIToZNxXjCfkjXTBAGFQkLYHWklw=
